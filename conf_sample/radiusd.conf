prefix = /usr/local
exec_prefix = ${prefix}
sysconfdir = ${prefix}/etc
localstatedir = /var
sbindir = ${exec_prefix}/sbin
logdir = /var/log
raddbdir = ${sysconfdir}/raddb
radacctdir = ${logdir}/radacct

#  Location of config and logfiles.
confdir = ${raddbdir}
run_dir = ${localstatedir}/run/radiusd

log_file = ${logdir}/radius.log

# libdir: Where to find the rlm_* modules.
libdir = ${exec_prefix}/lib

#  pidfile: Where to place the PID of the RADIUS server.
pidfile = ${run_dir}/radiusd.pid


#user = nobody
#group = nobody

#  max_request_time: The maximum time (in seconds) to handle a request.
max_request_time = 5
delete_blocked_requests = no

cleanup_delay = 5

max_requests = 1024

bind_address = 127.0.0.1
port = 0

hostname_lookups = no

allow_core_dumps = no

regular_expressions	= yes
extended_expressions	= yes

#  Log the full User-Name attribute, as it was found in the request.
log_stripped_names = yes

#  Log authentication requests to the log file.
log_auth = no

#  Log passwords with the authentication requests.
log_auth_badpass = no
log_auth_goodpass = no

# usercollide:  Turn "username collision" code on and off.  See the
usercollide = no

# lower_user / lower_pass:  
# Lower case the username/password "before" or "after"
# attempting to authenticate.  
lower_user = no
lower_pass = no

# nospace_user / nospace_pass:
nospace_user = before
nospace_pass = before

checkrad = ${sbindir}/checkrad


security {
	#  max_attributes: The maximum number of attributes
	max_attributes = 200
	reject_delay = 1
	status_server = no
}

# PROXY CONFIGURATION
proxy_requests  = no
#$INCLUDE  ${confdir}/proxy.conf

# CLIENTS CONFIGURATION
$INCLUDE  ${confdir}/clients.conf


# SNMP CONFIGURATION
snmp	= no
#$INCLUDE  ${confdir}/snmp.conf


# THREAD POOL CONFIGURATION
thread pool {
	start_servers = 5
	max_servers = 32
	min_spare_servers = 3
	max_spare_servers = 10
	max_requests_per_server = 500
}

# MODULE CONFIGURATION
modules {
	pap {
		auto_header = yes
	}

        
	files {
		usersfile = ${confdir}/users
		acctusersfile = ${confdir}/acct_users
		preproxy_usersfile = ${confdir}/preproxy_users
                compat = no
        }


	# CHAP module
	#
	#  To authenticate requests containing a CHAP-Password attribute.
	#
	chap {
		authtype = CHAP
	}

	mschap {
        	# Windows sends us a username in the form of
                # DOMAIN\user, but sends the challenge response
                # based on only the user portion.  This hack
                # corrects for that incorrect behavior.
                #
                with_ntdomain_hack = yes

        }

	acct_unique {
		key = "User-Name, Acct-Session-Id, NAS-IP-Address, Client-IP-Address, NAS-Port"
	}

	perl {
		module = /usr/local/billing/authhandler/radius.pm
	}

}

# Instantiation
#
instantiate {
}

#  Authorization. First preprocess (hints and huntgroups files),
#  then realms, and finally look in the "users" file.
#
#  The order of the realm modules will determine the order that
#  we try to find a matching realm.
#
#  Make *sure* that 'preprocess' comes before any realm if you 
#  need to setup hints for the remote radius server
authorize {
	chap
	mschap
	pap
	perl
}


authenticate {
	chap
	mschap
	pap
}


preacct {
	acct_unique
	files
}

#
#  Accounting.  Log the accounting data.
#
accounting {
	perl
}


session {
}


post-auth {
}

pre-proxy {
}

post-proxy {
}
